{"version":3,"sources":["images/background.jpg","components/Header.jsx","components/Card.jsx","components/Form.jsx","components/Container.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Img","styled","img","Head","header","Shadow","div","HeaderContent","TitleWrapper","Header","date","Date","src","imagen","alt","getFullYear","Cards","Title","H3","h3","IconContainer","Circle","HourContainer","Card","title","setOpenForm","id","className","onClick","Button","button","Forms","form","InputText","input","TextArea","textarea","Form","openform","useState","setError","body","info","setInfo","handleTextChange","e","target","name","value","preventDefault","trim","placeholder","onChange","type","DivContain","Wrapper","Container","data","setData","useEffect","a","axios","get","response","getData","console","log","map","item","key","App","this","props","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.19962e92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.cc77cb5f.jpg\";","import React from 'react';\nimport imagen from '../images/background.jpg';\nimport styled from \"styled-components\";\nimport { FaBars } from \"react-icons/fa\";\n\nconst Img = styled.img`\n  height: 15rem;\n  width: 100%;\n  \n`;\n\nconst Head = styled.header`\n  background-image: url('../images/background.jpg');\n  color: black;\n  height: 15rem;\n`;\n\nconst Shadow = styled.div`\n  height: 15rem;\n  width: 70%;\n  background-color: rgba(58, 110, 223, 0.5);\n  position: absolute;  \n  top: 0px; \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n`;\n\nconst HeaderContent = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 100%;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = () => {\n\n  const date = new Date(); \n\n  return(\n    <Head>\n      <Img src={imagen} alt='imagen' />\n      <Shadow> \n      <HeaderContent>\n        <TitleWrapper>\n          <h1>Carlos' Notebook</h1>\n          {date.getFullYear()} \n        </TitleWrapper>\n      </HeaderContent>\n      </Shadow>\n    </Head>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport styled from \"styled-components\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { FaCheck } from \"react-icons/fa\";\n\nimport '../App.css';\n\nconst Cards = styled.div`\n  background-color: #fff;\n  width: 50rem;\n  height: 8rem;\n  margin: 1rem;\n  color: black;\n  border-radius: 10px;\n  box-shadow: \n        -0.1em -0.1em 0.3em 0.3em rgba(0,0,0,0.1), \n             0 0  0 1px rgb(255,255,255),\n             0.1em 0.1em 1em rgba(0,0,0,0.1);\n  display: grid;\n  grid-template-columns: 10% 20% 50% 20%;\n`;\n\nconst Title = styled.div`\n  color: #B2B2B2;\n`;\n\nconst H3 = styled.h3`\n  color: #3A6EDF;\n`;\n\nconst IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Circle = styled.div`\n  width: 1.2rem;\n  height: 1.2rem;\n  background-color: #4ED6F4;\n  margin: 0px;\n  border-radius: 50px;\n`;\n\nconst HourContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: center;\n  color: #4ED6F4;\n  font-size: 1.2rem;\n`;\n\nconst Card = ({ title, id, setOpenForm }) => {\n\n  const handleShowForm = () => {\n    setOpenForm(true);\n  }\n\n  return (\n    <Cards>\n        <Circle></Circle>\n        <HourContainer>\n            <p>7:00 am</p>\n        </HourContainer>\n        <Title> \n          <H3>Qui este esse</H3>\n          {title}\n        </Title>\n        <IconContainer>\n          <FaEdit className='fa-edit' onClick={handleShowForm}/>\n          <FaCheck className='fa-check'/>\n        </IconContainer>\n    </Cards>\n  )\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport { FiX } from \"react-icons/fi\";\n\nimport '../App.css'\n\n\nconst Button = styled.button`\n  background-color: #F73552;\n  color: #FFF;\n  border: 0;\n  height: 4rem;\n  width: 4rem;\n  border-radius: 50px;\n  outline: none;\n`;\n\nconst Forms = styled.form`\n  display: grid;\n  grid-template-columns: 85% 15%;\n  width: 80%;\n`;\n\nconst InputText = styled.input`\n  width: 85%;\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 2.5rem;\n  padding-left: 2rem;\n  border-radius: 5px;\n  outline: none;\n  border: 0;\n  box-shadow: \n        0.1em 0.1em 0.1em 0.1em rgba(0,0,0,0.1), \n             0 0  0 1px rgb(255,255,255),\n             0.1em 0.1em 1em rgba(0,0,0,0.1);\n  font-family: 'Montserrat', sans-serif;\n  \n`;\n\nconst TextArea = styled.textarea`\n  width: 85%;\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 5rem;\n  padding-left: 2rem;\n  padding-top: 1rem;\n  border-radius: 5px;\n  outline: none;\n  border: 0;\n  box-shadow: \n        0.1em 0.1em 0.1em 0.1em rgba(0,0,0,0.1), \n             0 0  0 1px rgb(255,255,255),\n             0.1em 0.1em 1em rgba(0,0,0,0.1);\n  font-family: 'Montserrat', sans-serif;\n  resize: none;\n`;\n\nconst Form = ({ openform, setOpenForm }) => {\n\n  const [prueba, setPrueba] = useState(false)\n  \n  const [ error, setError ] = useState(false);\n  const [ info, setInfo ] = useState(\n    {\n      title: '',\n      body: '',\n    }\n  );\n  \n  const handleTextChange = (e) => {\n      setInfo({\n        ...info,\n        [e.target.name]: e.target.value\n      })\n  };\n  \n  const submitUserInfo = (e) => {\n    e.preventDefault()\n    \n    if(title.trim() === '' || body.trim() === ''){\n      setError(true)\n      return\n    };\n    \n    setError(false);\n  }\n\n  const handleCloseAndSave = () => {\n    setOpenForm(false);\n  }\n  \n  const { title, body } = info;\n  \n  return(\n    <Forms\n      onClick={submitUserInfo}\n    >\n      <div >\n        <InputText \n          name='value'\n          placeholder='Title'\n          value={title}\n          onChange={handleTextChange}\n        />\n        \n        <TextArea \n          name='body'\n          placeholder='Body'\n          value={body}\n          onChange={handleTextChange}\n        /> \n      </div>\n      \n      <Button type='submit' value='enviar' onClick={handleCloseAndSave}> \n        <FiX className='fi-x'/>\n      </Button>\n    </Forms>\n  )\n}\n\nexport default Form;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from \"styled-components\";\n\nimport Header from './Header';\nimport Card from './Card';\nimport Form from './Form';\n\nconst DivContain = styled.div`\n  width: 70%;\n  background-color: #fff;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 2rem;\n`;\n\nconst Container = () => {\n  \n  const [ openform, setOpenForm ] = useState(false);\n  const [ data, setData ] = useState([]);\n  \n  useEffect(() => {\n    const getData = async () => {\n      \n      const url = 'https://jsonplaceholder.typicode.com/posts/'\n      const response = await axios.get(url);\n      setData(response.data)\n      \n    }\n    getData();\n    \n    \n  }, [])\n  \n      console.log('data', data)\n  return(\n    <DivContain>\n      <Header />\n\n      <Wrapper>\n        { openform ? \n          <Form \n            setOpenForm={setOpenForm}\n            openform={openform}\n          /> :\n          null }\n        {data.map(item => {\n          return( \n            <Card \n              key={item.id}\n              title={item.title}\n              setOpenForm={setOpenForm}\n            />\n          )\n        })}\n      </Wrapper>\n      \n    </DivContain>\n  )\n}\n\nexport default Container;","import React, { Component } from 'react';\nimport './App.css';\nimport styled from \"styled-components\";\nimport Container from './components/Container';\n\n\n// https://drive.google.com/drive/folders/1g3WvmpajdVZqA9yqV3ShzCAQdV_iz1Ec?usp=sharing\n// https://jsonplaceholder.typicode.com/\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #F1F1F1;\n`;\n\nclass App extends Component {\n\n  render() {\n    const {className} = this.props \n    return (\n      <Wrapper className=\"App\" className={className}>\n        <Container />\n      </Wrapper>\n    );\n  }\n}\n\nexport default styled(App)`\n  .welcome {\n    text-align: center;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}